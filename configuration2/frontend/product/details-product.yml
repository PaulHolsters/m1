components:
  - name: details product
    # het type hoeft niet per se een binnen Mouldit gekende component zijn, je kan dus zonder extra configuratie je eigen componenten gebruiken binnen Mouldit
    # de summary component zal ik hier bv gebruiken zonder dat deze binnen Mouldit gekend is
    type: summary
    route: producten/detail/:ID
    configuration:
        action: get
        concept: product
        header: Details product
        # zowel aan een component gekend binnen mouldit als bij een zelf gemaakte frontend component
        # kan je customfields toevoegen indien dat zou uitkomen voor je project
        # op die manier kan je bestaande Mouldit componenten gaan customizen indien nodig
        # alsook je eigen componenten maken indien mouldit deze niet zou aanbieden
        # qua styling van de frontend moet je gewoon de styling mogelijkheden van primeNG gebruiken
        # todo in een latere fase moet Mouldit een meer ge√Øntegreerde aanpak voorzien (zodat hier later ook een no-code UI overheen geplaatst kan worden)
        custom fields:
          - name: some_fieldname # known to Mouldits GQL schema or a field registered by the dev that is associated with the correct GQL type
            function: functionName #some function that uses "value" to produce a correct value for the graphQL to serve to the client
            # return component.configuration.customFields.push({some_fieldname: functionName()})
            # probleem is alleen dat some_fieldname niet gekend is binnen het graphQL domein en daar op een eerste gezicht geen unknown types mogen voorkomen
            # maar dat type kan je gewoon bijmaken op basis van de configuratie hier via het engine proces
            # alleen kan je op die manier enkel bekende GQL types gebruiken dus moet er ook nog de mogelijkheid komen om eigen types toe te voegen
            # dit betekent simpelweg ervoor zorgen dat devs de GQL string verder moeten kunnen aanvullen met eigen types en dus verder extra API's maken mbv graphQL en Mongo